[config]
skip_core_tasks = false
skip_git_env_info = false
skip_rust_env_info = false
skip_crate_env_info = false
load_cargo_aliases = false

[env]
CARGO_MAKE_WORKSPACE_EMULATION = true
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_MAKE_CRATE_WORKSPACE_MEMBERS = [
  # "crates/aspenlib",
  "crates/native",
  "crates/wasm",
  "crates/mobile",
]

[tasks.default]
alias = "pretty-list"

[tasks.pretty-list]
private = false
workspace = false
script.main = '''
  echo \
  "\
  CWD: $CARGO_MAKE_WORKING_DIRECTORY
  Below are predefined functions for the workspace:

    ##  Development  ##
      run-native: Run Aspen Halls for desktop.
      run-mobile: starts app on device connected too adb. make sure too pair first
      run-web: starts a webserver on localhost and runs the wasm version of the game

    ##  Release ##
      package-release: builds all launchers in release mode and outputs artifacts too package dir

    ##  Utilities ##
      pretty-list: list all tasks that are worthwile in this workspace
  "
'''

[tasks.run-native]
dependencies = ["copy-crate-assets"]
cwd = "crates/desktop/"
workspace = false
description = ""
command = "cargo"
args = ["run", "--features=develop,dynamic"]

[tasks.run-web]
dependencies = ["copy-crate-assets"]
cwd = "crates/wasm/"
workspace = false
description = ""
command = "trunk"
args = ["serve", "--open", "--features", "develop"]

[tasks.run-mobile]
dependencies = ["copy-crate-assets"]
cwd = "crates/mobile/"
workspace = false
description = ""
condition.env_set = ["BUNDLETOOL_PATH", "ANDROID_NDK_ROOT", "JAVA_HOME"]
script.pre = "cargo ndk -t arm64-v8a -o android-project/app/src/main/jniLibs build"
script.main = "gradle --debug -w -p android-project installDebug && adb shell monkey -p com.hellzbellz123.aspen_halls -c android.intent.category.LAUNCHER 1"
script.post = " rogcat clear && rogcat -r aspenlib "


[tasks.copy-crate-assets]
workspace = false
script_runner = "@shell"
script.main = "echo 'refreshing desktop assets' && rm -rf crates/desktop/assets && cp -r assets crates/desktop/assets"
script.pre = "echo 'refreshing wasm assets' && rm -rf crates/wasm/assets && cp -r assets crates/wasm/assets"
script.post = "echo 'refreshing mobile assets' && rm -rf crates/mobile/assets && cp -r assets crates/mobile/assets"

[tasks.package-release]
description = "runs package release workflow for each target"
