plugins {
    alias(libs.plugins.android.application)
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.hellzbellz123.aspen_halls'
    compileSdk 34

    defaultConfig {
        applicationId "com.hellzbellz123.aspen_halls"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"
        // need this otherwise it won't insert libc++_shared.so
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
        // set up targets
        ndk {
            abiFilters 'arm64-v8a'
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file(properties.getProperty('store.location'))
            storePassword properties.getProperty('store.password')
            keyAlias properties.getProperty('release.alias')
            keyPassword properties.getProperty('release.password')
        }
        release {
            storeFile file(properties.getProperty('store.location'))
            storePassword properties.getProperty('store.password')
            keyAlias properties.getProperty('release.alias')
            keyPassword properties.getProperty('release.password')
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            assets.srcDirs += files('../../../../assets')
            res.srcDirs += files('../../../../assets-build/android')
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["-Xlint:deprecation"]
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}
